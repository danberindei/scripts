#!/usr/bin/python

from __future__ import print_function

import argparse
import fileinput
import re
import sys
import cStringIO


def handleMessage(message, filter):
   if filter.search(message):
      print(message, end='')

def main():
   parser = argparse.ArgumentParser("Filter logs")
   parser.add_argument('pattern', nargs=1,
                      help='Filter pattern')
   parser.add_argument('files', metavar='file', nargs='*', default='-',
                      help='Input file')
   args = parser.parse_args()
   #print(args)

   #pattern = sys.argv[1]
   #files = sys.argv[2:]
   pattern = args.pattern[0]
   files = args.files

   # 2011-06-22 17:49:44,732 DEBUG
   # 2011-07-27 11:46:45,282 35195 TRACE
   # 11:46:45,282 TRACE
   possibleMessageStartFilters = [re.compile('^\d{4}-\d{2}-\d{2} '), re.compile('^\d{2}:\d{2}:\d{2},\d{3} ')]
   messageFilter = re.compile(pattern, re.MULTILINE | re.DOTALL)

   f = fileinput.input(files)
   firstLine = next(f)
   messageStartFilter = next(x for x in possibleMessageStartFilters if x.match(firstLine))

   messageBuffer = cStringIO.StringIO()
   messageBuffer.write(firstLine)
   for line in f:
      if messageStartFilter.match(line):
         #print("Analyzing message " + messageBuffer.getvalue())
         handleMessage(messageBuffer.getvalue(), messageFilter)
         messageBuffer = cStringIO.StringIO()

      messageBuffer.write(line)

   handleMessage(messageBuffer.getvalue(), messageFilter)
   messageBuffer.close()

main()
